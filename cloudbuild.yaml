# cloudbuild.yaml
steps:
  # 1. Bangun Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:${COMMIT_SHA}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:latest'
      - '.'
    id: 'Build Image'

  # 2. Push Docker image ke Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:${COMMIT_SHA}'
    id: 'Push SHA Image'
    waitFor: ['Build Image']
    
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:latest'
    id: 'Push Latest Image'
    waitFor: ['Build Image']

  # 3. Deploy image baru ke Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:${COMMIT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--service-account=${_SERVICE_ACCOUNT}'
      - '--allow-unauthenticated'
      - '--add-cloudsql-instances=${_CLOUDSQL_CONNECTION}'
      - '--vpc-connector=${_VPC_CONNECTOR}'
    id: 'Deploy to Cloud Run'
    waitFor: ['Push SHA Image', 'Push Latest Image']

# Simpan image yang di-build untuk referensi
images:
  - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:${COMMIT_SHA}'
  - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:latest'

# Tentukan bucket GCS untuk menyimpan log build
logs_bucket: 'gs://logs-yantology'

# Opsi Timeout (opsional)
# timeout: 1200s
