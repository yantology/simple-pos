# cloudbuild.yaml
steps:
  # 1. Bangun Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/go-app:latest'
      - '.' # Konteks build adalah direktori root repo (pastikan Dockerfile ada di sini atau sesuaikan path)
    id: 'Build Image'

  # 2. Push Docker image ke Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/go-app:latest'
    id: 'Push Image'
    waitFor: ['Build Image'] # Tunggu langkah build selesai
  # 3. Deploy image baru ke Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}' # Nama service Cloud Run
      - '--image=${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/go-app:latest' # Image baru
      - '--region=${_REGION}' # Region Cloud Run
      - '--platform=managed' # Platform Cloud Run
      - '--service-account=${_SERVICE_ACCOUNT}' # Gunakan SA yang dikonfigurasi
      - '--allow-unauthenticated' # Sesuaikan jika service Anda tidak publik
      - '--set-cloudsql-instances=${_CLOUDSQL_CONNECTION}'
      - '--vpc-connector=${_VPC_CONNECTOR}'
      - '--set-secrets=DB_PASSWORD=projects/${_PROJECT_ID}/secrets/${_DB_PASSWORD_SECRET}:latest'
      - '--set-secrets=JWT_ACCESS_SECRET=projects/${_PROJECT_ID}/secrets/${_JWT_ACCESS_SECRET}:latest'
      - '--set-secrets=JWT_REFRESH_SECRET=projects/${_PROJECT_ID}/secrets/${_JWT_REFRESH_SECRET}:latest'
      - '--set-secrets=RESEND_API_KEY=projects/${_PROJECT_ID}/secrets/${_RESEND_API_SECRET}:latest'
      - '--set-env-vars=DB_USER=${_DB_USER}'
      - '--set-env-vars=DB_NAME=${_DB_NAME}'
    id: 'Deploy to Cloud Run'
    waitFor: ['Push Image'] # Tunggu langkah push selesai

# Simpan image yang di-build untuk referensi
images:
  - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REPO_NAME}/go-app:latest'

# Timeout (opsional)
timeout: 1200s # 20 menit
